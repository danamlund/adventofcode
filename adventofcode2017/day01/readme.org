* Lisp 1.5
 - Running Lisp 1.5 on the SIMH IBM 7094 simulator
   - http://web.sonoma.edu/users/l/luvisi/
 - lisp 1.5 manual http://www.softwarepreservation.org/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf 
 - i7094 manual file:///usr/share/doc/simh/i7094_doc.pdf

** install and run
#+BEGIN_SRC shell
wget http://web.sonoma.edu/users/l/luvisi/lisp/lisp15.tar.gz
tar xf lisp15.tar.gz
cd lisp15
tar xf utils-*.tar.gz 
cd utils
make
sudo cp txt2bcd /usr/local/bin
cd ..
sudo apt-get install simh
i7094 lisptape.ini factorial.txt 
#+END_SRC

* day 01 part 1
** puzzle input
 - https://adventofcode.com/2017/day/1
#+BEGIN_EXAMPLE 
3294199471327195994824832197564859876682638188889768298894243832665654681412886862234525991553276578641265589959178414218389329361496673991614673626344552179413995562266818138372393213966143124914469397692587251112663217862879233226763533911128893354536353213847122251463857894159819828724827969576432191847787772732881266875469721189331882228146576832921314638221317393256471998598117289632684663355273845983933845721713497811766995367795857965222183668765517454263354111134841334631345111596131682726196574763165187889337599583345634413436165539744188866156771585647718555182529936669683581662398618765391487164715724849894563314426959348119286955144439452731762666568741612153254469131724137699832984728937865956711925592628456617133695259554548719328229938621332325125972547181236812263887375866231118312954369432937359357266467383318326239572877314765121844831126178173988799765218913178825966268816476559792947359956859989228917136267178571776316345292573489873792149646548747995389669692188457724414468727192819919448275922166321158141365237545222633688372891451842434458527698774342111482498999383831492577615154591278719656798277377363284379468757998373193231795767644654155432692988651312845433511879457921638934877557575241394363721667237778962455961493559848522582413748218971212486373232795878362964873855994697149692824917183375545192119453587398199912564474614219929345185468661129966379693813498542474732198176496694746111576925715493967296487258237854152382365579876894391815759815373319159213475555251488754279888245492373595471189191353244684697662848376529881512529221627313527441221459672786923145165989611223372241149929436247374818467481641931872972582295425936998535194423916544367799522276914445231582272368388831834437562752119325286474352863554693373718848649568451797751926315617575295381964426843625282819524747119726872193569785611959896776143539915299968276374712996485367853494734376257511273443736433464496287219615697341973131715166768916149828396454638596713572963686159214116763
#+END_EXAMPLE

** program
 - (require 'ob-org)
 - tangle file: C-c C-v t
 - C-c C-c code src
#+BEGIN_SRC org :tangle day01.txt :padline no
; dont trim spaces org-mode
       TEST  DAY01

DEFINE ((
   (DAY01 (LAMBDA (XS) (DAY01REC XS (CAR XS))))
   (DAY01REC (LAMBDA (XS FIRSTX)
                     (COND
                        ((NULL (CDR XS))
                           (DAY01EQ (CAR XS) FIRSTX))
                        (T
                           (PLUS
                              (DAY01EQ (CAR XS) (CADR XS))
                              (DAY01REC (CDR XS) FIRSTX))))))
   (DAY01EQ (LAMBDA (A B)
                      (COND
                         ((EQ A B) A)
                         (T 0))))
))

PLUS (
(DAY01REC (LIST
3 2 9 4 1 9 9 4 7 1 3 2 7 1 9 5 9 9 4 8 2 4 8 3 2 1 9 7 5 6 4 8 5 9 8
7 6 6 8 2 6 3 8 1 8 8 8 8 9 7 6 8 2 9 8 8 9 4 2 4 3 8 3 2 6 6 5 6 5 4
6 8 1 4 1 2 8 8 6 8 6 2 2 3 4 5 2 5 9 9 1 5 5 3 2 7 6 5 7 8 6 4 1 2 6
) 5)

(DAY01REC (LIST
5 5 8 9 9 5 9 1 7 8 4 1 4 2 1 8 3 8 9 3 2 9 3 6 1 4 9 6 6 7 3 9 9 1 6
1 4 6 7 3 6 2 6 3 4 4 5 5 2 1 7 9 4 1 3 9 9 5 5 6 2 2 6 6 8 1 8 1 3 8
3 7 2 3 9 3 2 1 3 9 6 6 1 4 3 1 2 4 9 1 4 4 6 9 3 9 7 6 9 2 5 8 7 2 5
) 1)

(DAY01REC (LIST
1 1 1 2 6 6 3 2 1 7 8 6 2 8 7 9 2 3 3 2 2 6 7 6 3 5 3 3 9 1 1 1 2 8 8
9 3 3 5 4 5 3 6 3 5 3 2 1 3 8 4 7 1 2 2 2 5 1 4 6 3 8 5 7 8 9 4 1 5 9
8 1 9 8 2 8 7 2 4 8 2 7 9 6 9 5 7 6 4 3 2 1 9 1 8 4 7 7 8 7 7 7 2 7 3
) 2)

(DAY01REC (LIST
2 8 8 1 2 6 6 8 7 5 4 6 9 7 2 1 1 8 9 3 3 1 8 8 2 2 2 8 1 4 6 5 7 6 8
3 2 9 2 1 3 1 4 6 3 8 2 2 1 3 1 7 3 9 3 2 5 6 4 7 1 9 9 8 5 9 8 1 1 7
2 8 9 6 3 2 6 8 4 6 6 3 3 5 5 2 7 3 8 4 5 9 8 3 9 3 3 8 4 5 7 2 1 7 1
) 3)

(DAY01REC (LIST
3 4 9 7 8 1 1 7 6 6 9 9 5 3 6 7 7 9 5 8 5 7 9 6 5 2 2 2 1 8 3 6 6 8 7
6 5 5 1 7 4 5 4 2 6 3 3 5 4 1 1 1 1 3 4 8 4 1 3 3 4 6 3 1 3 4 5 1 1 1
5 9 6 1 3 1 6 8 2 7 2 6 1 9 6 5 7 4 7 6 3 1 6 5 1 8 7 8 8 9 3 3 7 5 9
) 9)

(DAY01REC (LIST
9 5 8 3 3 4 5 6 3 4 4 1 3 4 3 6 1 6 5 5 3 9 7 4 4 1 8 8 8 6 6 1 5 6 7
7 1 5 8 5 6 4 7 7 1 8 5 5 5 1 8 2 5 2 9 9 3 6 6 6 9 6 8 3 5 8 1 6 6 2
3 9 8 6 1 8 7 6 5 3 9 1 4 8 7 1 6 4 7 1 5 7 2 4 8 4 9 8 9 4 5 6 3 3 1
) 4)

(DAY01REC (LIST
4 4 2 6 9 5 9 3 4 8 1 1 9 2 8 6 9 5 5 1 4 4 4 3 9 4 5 2 7 3 1 7 6 2 6
6 6 5 6 8 7 4 1 6 1 2 1 5 3 2 5 4 4 6 9 1 3 1 7 2 4 1 3 7 6 9 9 8 3 2
9 8 4 7 2 8 9 3 7 8 6 5 9 5 6 7 1 1 9 2 5 5 9 2 6 2 8 4 5 6 6 1 7 1 3
) 3)

(DAY01REC (LIST
3 6 9 5 2 5 9 5 5 4 5 4 8 7 1 9 3 2 8 2 2 9 9 3 8 6 2 1 3 3 2 3 2 5 1
2 5 9 7 2 5 4 7 1 8 1 2 3 6 8 1 2 2 6 3 8 8 7 3 7 5 8 6 6 2 3 1 1 1 8
3 1 2 9 5 4 3 6 9 4 3 2 9 3 7 3 5 9 3 5 7 2 6 6 4 6 7 3 8 3 3 1 8 3 2
) 6)

(DAY01REC (LIST
6 2 3 9 5 7 2 8 7 7 3 1 4 7 6 5 1 2 1 8 4 4 8 3 1 1 2 6 1 7 8 1 7 3 9
8 8 7 9 9 7 6 5 2 1 8 9 1 3 1 7 8 8 2 5 9 6 6 2 6 8 8 1 6 4 7 6 5 5 9
7 9 2 9 4 7 3 5 9 9 5 6 8 5 9 9 8 9 2 2 8 9 1 7 1 3 6 2 6 7 1 7 8 5 7
) 1)

(DAY01REC (LIST
1 7 7 6 3 1 6 3 4 5 2 9 2 5 7 3 4 8 9 8 7 3 7 9 2 1 4 9 6 4 6 5 4 8 7
4 7 9 9 5 3 8 9 6 6 9 6 9 2 1 8 8 4 5 7 7 2 4 4 1 4 4 6 8 7 2 7 1 9 2
8 1 9 9 1 9 4 4 8 2 7 5 9 2 2 1 6 6 3 2 1 1 5 8 1 4 1 3 6 5 2 3 7 5 4
) 5)

(DAY01REC (LIST
5 2 2 2 6 3 3 6 8 8 3 7 2 8 9 1 4 5 1 8 4 2 4 3 4 4 5 8 5 2 7 6 9 8 7
7 4 3 4 2 1 1 1 4 8 2 4 9 8 9 9 9 3 8 3 8 3 1 4 9 2 5 7 7 6 1 5 1 5 4
5 9 1 2 7 8 7 1 9 6 5 6 7 9 8 2 7 7 3 7 7 3 6 3 2 8 4 3 7 9 4 6 8 7 5
) 7)

(DAY01REC (LIST
7 9 9 8 3 7 3 1 9 3 2 3 1 7 9 5 7 6 7 6 4 4 6 5 4 1 5 5 4 3 2 6 9 2 9
8 8 6 5 1 3 1 2 8 4 5 4 3 3 5 1 1 8 7 9 4 5 7 9 2 1 6 3 8 9 3 4 8 7 7
5 5 7 5 7 5 2 4 1 3 9 4 3 6 3 7 2 1 6 6 7 2 3 7 7 7 8 9 6 2 4 5 5 9 6
) 1)

(DAY01REC (LIST
1 4 9 3 5 5 9 8 4 8 5 2 2 5 8 2 4 1 3 7 4 8 2 1 8 9 7 1 2 1 2 4 8 6 3
7 3 2 3 2 7 9 5 8 7 8 3 6 2 9 6 4 8 7 3 8 5 5 9 9 4 6 9 7 1 4 9 6 9 2
8 2 4 9 1 7 1 8 3 3 7 5 5 4 5 1 9 2 1 1 9 4 5 3 5 8 7 3 9 8 1 9 9 9 1
) 2)

(DAY01REC (LIST
2 5 6 4 4 7 4 6 1 4 2 1 9 9 2 9 3 4 5 1 8 5 4 6 8 6 6 1 1 2 9 9 6 6 3
7 9 6 9 3 8 1 3 4 9 8 5 4 2 4 7 4 7 3 2 1 9 8 1 7 6 4 9 6 6 9 4 7 4 6
1 1 1 5 7 6 9 2 5 7 1 5 4 9 3 9 6 7 2 9 6 4 8 7 2 5 8 2 3 7 8 5 4 1 5
) 2)

(DAY01REC (LIST
2 3 8 2 3 6 5 5 7 9 8 7 6 8 9 4 3 9 1 8 1 5 7 5 9 8 1 5 3 7 3 3 1 9 1
5 9 2 1 3 4 7 5 5 5 5 2 5 1 4 8 8 7 5 4 2 7 9 8 8 8 2 4 5 4 9 2 3 7 3
5 9 5 4 7 1 1 8 9 1 9 1 3 5 3 2 4 4 6 8 4 6 9 7 6 6 2 8 4 8 3 7 6 5 2
) 9)

(DAY01REC (LIST
9 8 8 1 5 1 2 5 2 9 2 2 1 6 2 7 3 1 3 5 2 7 4 4 1 2 2 1 4 5 9 6 7 2 7
8 6 9 2 3 1 4 5 1 6 5 9 8 9 6 1 1 2 2 3 3 7 2 2 4 1 1 4 9 9 2 9 4 3 6
2 4 7 3 7 4 8 1 8 4 6 7 4 8 1 6 4 1 9 3 1 8 7 2 9 7 2 5 8 2 2 9 5 4 2
) 5)

(DAY01REC (LIST
5 9 3 6 9 9 8 5 3 5 1 9 4 4 2 3 9 1 6 5 4 4 3 6 7 7 9 9 5 2 2 2 7 6 9
1 4 4 4 5 2 3 1 5 8 2 2 7 2 3 6 8 3 8 8 8 3 1 8 3 4 4 3 7 5 6 2 7 5 2
1 1 9 3 2 5 2 8 6 4 7 4 3 5 2 8 6 3 5 5 4 6 9 3 3 7 3 7 1 8 8 4 8 6 4
) 9)

(DAY01REC (LIST
9 5 6 8 4 5 1 7 9 7 7 5 1 9 2 6 3 1 5 6 1 7 5 7 5 2 9 5 3 8 1 9 6 4 4
2 6 8 4 3 6 2 5 2 8 2 8 1 9 5 2 4 7 4 7 1 1 9 7 2 6 8 7 2 1 9 3 5 6 9
7 8 5 6 1 1 9 5 9 8 9 6 7 7 6 1 4 3 5 3 9 9 1 5 2 9 9 9 6 8 2 7 6 3 7
) 4)

(DAY01REC (LIST
4 7 1 2 9 9 6 4 8 5 3 6 7 8 5 3 4 9 4 7 3 4 3 7 6 2 5 7 5 1 1 2 7 3 4
4 3 7 3 6 4 3 3 4 6 4 4 9 6 2 8 7 2 1 9 6 1 5 6 9 7 3 4 1 9 7 3 1 3 1
7 1 5 1 6 6 7 6 8 9 1 6 1 4 9 8 2 8 3 9 6 4 5 4 6 3 8 5 9 6 7 1 3 5 7
) 2)

(DAY01REC (LIST
2 9 6 3 6 8 6 1 5 9 2 1 4 1 1 6 7 6 3
) 3)

)





STOP)))   )))   )))   )))
       FIN      END OF LISP RUN
#+END_SRC
#+BEGIN_SRC sh :results output verbatim
cp day01.txt lisp15
cd lisp15
i7094 lisptape.ini day01.txt
cat sys.log
#+END_SRC

#+RESULTS:
#+begin_example

IBM 7094 simulator V3.8-1
MTA: unit is read only
MTA: unit is read only
LPT: creating new file

HALT instruction, PC: 10524 (TRA 10523)
Goodbye
      ; FOO

             TEST  DAY01



  THE TIME ( 0/ 0  000.0) HAS COME, THE WALRUS SAID, TO TALK OF MANY THI
NGS .....   -LEWIS CARROLL-
 EVALQUOTE OPERATOR AS OF 1 MARCH 1961.    INPUT LISTS NOW BEING READ.


  THE TIME ( 0/ 0  000.0) HAS COME, THE WALRUS SAID, TO TALK OF MANY THI
NGS .....   -LEWIS CARROLL-
  FUNCTION   EVALQUOTE   HAS BEEN ENTERED, ARGUMENTS..
 DEFINE

 (((DAY01 (LAMBDA (XS) (DAY01REC XS (CAR XS)))) (DAY01REC (LAMBDA (XS FI
RSTX) (COND ((NULL (CDR XS)) (DAY01EQ (CAR XS) F
 IRSTX)) (T (PLUS (DAY01EQ (CAR XS) (CADR XS)) (DAY01REC (CDR XS) FIRSTX
)))))) (DAY01EQ (LAMBDA (A B) (COND ((EQ A B) A)
  (T 0))))))


 END OF EVALQUOTE, VALUE IS ..
 *TRUE*

  FUNCTION   EVALQUOTE   HAS BEEN ENTERED, ARGUMENTS..
 PLUS

 ((DAY01REC (LIST 3 2 9 4 1 9 9 4 7 1 3 2 7 1 9 5 9 9 4 8 2 4 8 3 2 1 9
7 5 6 4 8 5 9 8 7 6 6 8 2 6 3 8 1 8 8 8 8 9 7 6
 8 2 9 8 8 9 4 2 4 3 8 3 2 6 6 5 6 5 4 6 8 1 4 1 2 8 8 6 8 6 2 2 3 4 5 2
 5 9 9 1 5 5 3 2 7 6 5 7 8 6 4 1 2 6) 5) (DAY01R
 EC (LIST 5 5 8 9 9 5 9 1 7 8 4 1 4 2 1 8 3 8 9 3 2 9 3 6 1 4 9 6 6 7 3
9 9 1 6 1 4 6 7 3 6 2 6 3 4 4 5 5 2 1 7 9 4 1 3
 9 9 5 5 6 2 2 6 6 8 1 8 1 3 8 3 7 2 3 9 3 2 1 3 9 6 6 1 4 3 1 2 4 9 1 4
 4 6 9 3 9 7 6 9 2 5 8 7 2 5) 1) (DAY01REC (LIST
  1 1 1 2 6 6 3 2 1 7 8 6 2 8 7 9 2 3 3 2 2 6 7 6 3 5 3 3 9 1 1 1 2 8 8
9 3 3 5 4 5 3 6 3 5 3 2 1 3 8 4 7 1 2 2 2 5 1 4
 6 3 8 5 7 8 9 4 1 5 9 8 1 9 8 2 8 7 2 4 8 2 7 9 6 9 5 7 6 4 3 2 1 9 1 8
 4 7 7 8 7 7 7 2 7 3) 2) (DAY01REC (LIST 2 8 8 1
  2 6 6 8 7 5 4 6 9 7 2 1 1 8 9 3 3 1 8 8 2 2 2 8 1 4 6 5 7 6 8 3 2 9 2
1 3 1 4 6 3 8 2 2 1 3 1 7 3 9 3 2 5 6 4 7 1 9 9
 8 5 9 8 1 1 7 2 8 9 6 3 2 6 8 4 6 6 3 3 5 5 2 7 3 8 4 5 9 8 3 9 3 3 8 4
 5 7 2 1 7 1) 3) (DAY01REC (LIST 3 4 9 7 8 1 1 7
  6 6 9 9 5 3 6 7 7 9 5 8 5 7 9 6 5 2 2 2 1 8 3 6 6 8 7 6 5 5 1 7 4 5 4
2 6 3 3 5 4 1 1 1 1 3 4 8 4 1 3 3 4 6 3 1 3 4 5
 1 1 1 5 9 6 1 3 1 6 8 2 7 2 6 1 9 6 5 7 4 7 6 3 1 6 5 1 8 7 8 8 9 3 3 7
 5 9) 9) (DAY01REC (LIST 9 5 8 3 3 4 5 6 3 4 4 1
  3 4 3 6 1 6 5 5 3 9 7 4 4 1 8 8 8 6 6 1 5 6 7 7 1 5 8 5 6 4 7 7 1 8 5
5 5 1 8 2 5 2 9 9 3 6 6 6 9 6 8 3 5 8 1 6 6 2 3
 9 8 6 1 8 7 6 5 3 9 1 4 8 7 1 6 4 7 1 5 7 2 4 8 4 9 8 9 4 5 6 3 3 1) 4)
 (DAY01REC (LIST 4 4 2 6 9 5 9 3 4 8 1 1 9 2 8 6
  9 5 5 1 4 4 4 3 9 4 5 2 7 3 1 7 6 2 6 6 6 5 6 8 7 4 1 6 1 2 1 5 3 2 5
4 4 6 9 1 3 1 7 2 4 1 3 7 6 9 9 8 3 2 9 8 4 7 2
 8 9 3 7 8 6 5 9 5 6 7 1 1 9 2 5 5 9 2 6 2 8 4 5 6 6 1 7 1 3) 3) (DAY01R
EC (LIST 3 6 9 5 2 5 9 5 5 4 5 4 8 7 1 9 3 2 8 2
  2 9 9 3 8 6 2 1 3 3 2 3 2 5 1 2 5 9 7 2 5 4 7 1 8 1 2 3 6 8 1 2 2 6 3
8 8 7 3 7 5 8 6 6 2 3 1 1 1 8 3 1 2 9 5 4 3 6 9
 4 3 2 9 3 7 3 5 9 3 5 7 2 6 6 4 6 7 3 8 3 3 1 8 3 2) 6) (DAY01REC (LIST
 6 2 3 9 5 7 2 8 7 7 3 1 4 7 6 5 1 2 1 8 4 4 8 3
  1 1 2 6 1 7 8 1 7 3 9 8 8 7 9 9 7 6 5 2 1 8 9 1 3 1 7 8 8 2 5 9 6 6 2
6 8 8 1 6 4 7 6 5 5 9 7 9 2 9 4 7 3 5 9 9 5 6 8
 5 9 9 8 9 2 2 8 9 1 7 1 3 6 2 6 7 1 7 8 5 7) 1) (DAY01REC (LIST 1 7 7 6
 3 1 6 3 4 5 2 9 2 5 7 3 4 8 9 8 7 3 7 9 2 1 4 9
  6 4 6 5 4 8 7 4 7 9 9 5 3 8 9 6 6 9 6 9 2 1 8 8 4 5 7 7 2 4 4 1 4 4 6
8 7 2 7 1 9 2 8 1 9 9 1 9 4 4 8 2 7 5 9 2 2 1 6
 6 3 2 1 1 5 8 1 4 1 3 6 5 2 3 7 5 4) 5) (DAY01REC (LIST 5 2 2 2 6 3 3 6
 8 8 3 7 2 8 9 1 4 5 1 8 4 2 4 3 4 4 5 8 5 2 7 6
  9 8 7 7 4 3 4 2 1 1 1 4 8 2 4 9 8 9 9 9 3 8 3 8 3 1 4 9 2 5 7 7 6 1 5
1 5 4 5 9 1 2 7 8 7 1 9 6 5 6 7 9 8 2 7 7 3 7 7
 3 6 3 2 8 4 3 7 9 4 6 8 7 5) 7) (DAY01REC (LIST 7 9 9 8 3 7 3 1 9 3 2 3
 1 7 9 5 7 6 7 6 4 4 6 5 4 1 5 5 4 3 2 6 9 2 9 8
  8 6 5 1 3 1 2 8 4 5 4 3 3 5 1 1 8 7 9 4 5 7 9 2 1 6 3 8 9 3 4 8 7 7 5
5 7 5 7 5 2 4 1 3 9 4 3 6 3 7 2 1 6 6 7 2 3 7 7
 7 8 9 6 2 4 5 5 9 6) 1) (DAY01REC (LIST 1 4 9 3 5 5 9 8 4 8 5 2 2 5 8 2
 4 1 3 7 4 8 2 1 8 9 7 1 2 1 2 4 8 6 3 7 3 2 3 2
  7 9 5 8 7 8 3 6 2 9 6 4 8 7 3 8 5 5 9 9 4 6 9 7 1 4 9 6 9 2 8 2 4 9 1
7 1 8 3 3 7 5 5 4 5 1 9 2 1 1 9 4 5 3 5 8  3 9

 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1743 FREE   4399  PUSH DOWN DEPTH   1856
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1741 FREE   4748  PUSH DOWN DEPTH   1444
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1739 FREE   4761  PUSH DOWN DEPTH   1403
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1737 FREE   4773  PUSH DOWN DEPTH   1335
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1735 FREE   4783  PUSH DOWN DEPTH   1278
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1733 FREE   4788  PUSH DOWN DEPTH   1240
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1731 FREE   4791  PUSH DOWN DEPTH   1210
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1729 FREE   4793  PUSH DOWN DEPTH   1191
 GARBAGE COLLECTOR ENTERED AT  04041 OCTAL.                   FULL WORDS
  1727 FREE   4798  PUSH DOWN DEPTH   1153
 END OF EVALQUOTE, VALUE IS ..
 1158



  THE TIME ( 0/ 0  000.0) HAS COME, THE WALRUS SAID, TO TALK OF MANY THI
NGS .....   -LEWIS CARROLL-
 END OF EVALQUOTE OPERATOR
             FIN      END OF LISP RUN

#+end_example

** guesses
 - 1146 too low
 - 1161 too high
 - 1158 correct answer

** summary
 - cannot read full problem in at once
   - it stops reading sexp when buffer is full without warning
   - fixed by manually splitting into fewer sexps
 - could not get arrays to work (to maybe get full problem in at once)
 - could not get card reader input to work (to stream problem in properly)
 - different top-level function apply syntax very annoying

* day 01 part 2
#+BEGIN_SRC elisp
(defun day01b (input) 
  (defun to-list (input)
    (defun helper (i len)
      (if (= i len)
        nil
        (cons (string-to-number (string (elt input i))) (helper (+ 1 i) len))))
    (helper 0 (length input)))

  (defun rotate-list (list rotate)
    (defun helper (list i prefix)
      (if (= i rotate)
        (append list (nreverse prefix))
        (helper (cdr list) (+ i 1) (cons (car list) prefix))))
    (helper list 0 nil))

  (defun sum-equals (xs ys)
    (defun helper (xs ys sum)
      (if (null xs)
        sum
        (helper (cdr xs) (cdr ys) (+ sum (if (= (car xs) (car ys)) (car xs) 0)))))
    (helper xs ys 0))

  (let* ((list (to-list input))
         (rotated-list (rotate-list list (/ (length input) 2))))
    (sum-equals list rotated-list)))

(setq max-specpdl-size 100000)
(setq max-lisp-eval-depth 10000)

(day01b
#+END_SRC

#+RESULTS:
: 1132

** summary
 - emacs lisp does not like recursive lisp, but it works and is fast

